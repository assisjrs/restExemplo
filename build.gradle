/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Assis' at '09/08/16 22:10' with Gradle 2.14
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.akhikhl.gretty' //para Jetty

sourceSets.main.resources.srcDirs += ["src/main/resources"]
sourceSets.test.resources.srcDirs = ["src/test/resources"]

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenLocal()
    mavenCentral()
    
    maven {
        url "https://mvnrepository.com"
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    
    //compile 'org.springframework:spring-webmvc:4.1.6.RELEASE'
    //compile 'org.springframework:spring-orm:4.1.6.RELEASE'
    
    compile 'org.springframework:spring-webmvc'
    compile 'org.springframework:spring-orm'
    
    compile 'org.springframework.boot:spring-boot-starter-parent'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa' 
        
    compile 'org.apache.commons:commons-dbcp2:2.0'
    
    //compile group: 'org.hibernate', name: 'hibernate-core', version: '3.6.7.Final'
    compile  'org.hibernate:hibernate-core:4.3.6.Final'
    compile 'org.javassist:javassist:3.15.0-GA'
    compile 'org.slf4j:slf4j-simple:1.7.7'
    
    runtime "org.hsqldb:hsqldb:2.3.4"
    
    compile 'com.fasterxml.jackson.core:jackson-core:2.7.3'
	compile 'com.fasterxml.jackson.core:jackson-annotations:2.7.3'
	compile 'com.fasterxml.jackson.core:jackson-databind:2.7.3'
	
	compile 'io.jsonwebtoken:jjwt:0.6.0'
	compile 'org.modelmapper:modelmapper:0.7.5'
	
    //include in compile only, exclude in the war
    //providedCompile 'javax.servlet:servlet-api:2.5'
    
	providedCompile 'javax.servlet:javax.servlet-api:3.1.0'    
    providedCompile 'javax.servlet:jstl:1.2'
    
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
    testCompile 'com.squareup.okhttp3:mockwebserver:3.4.1'
    testCompile 'org.springframework:spring-test:4.1.6.RELEASE'
    
    testCompile 'org.skyscreamer:jsonassert:1.3.0'
    testCompile 'com.jayway.jsonpath:json-path-assert:2.2.0'
    
    testCompile 'org.dbunit:dbunit:2.5.0'
    testCompile 'com.github.springtestdbunit:spring-test-dbunit:1.2.0'
}

buildscript {
  repositories {
    jcenter()
  }

  dependencies {
    classpath 'org.akhikhl.gretty:gretty:+'
  }
}

gretty {
  port = 8080
  contextPath = '/'
  servletContainer = 'jetty9' //tomcat7 or tomcat8
}

eclipse {
  wtp {
    component {
      //define context path, default to project folder name
      contextPath = '/'
    }
  }
}
